FAXtoLINE
PythonコードにてLINEAPIとDropboxAPIを使ってFAXフォルダのPDFを検知しリンクを作ってLINEに通知する

●を付けた部分が実装されていないようなので注意して確認してください
そのコードでの私が認識している動作概要を以下に記載するので相違があれば行の頭に▲を付けて次の行に△を付けて書き込んで渡してください、コード生成は不要です。コードに間違いがあれば、どのようになっているか教えてください

動作概要

1. 認証
設定ファイルの読み込みと初期化:
config.json を読み込み、監視フォルダ、トークン残時間を内容を表示。
設定ファイルが存在しない場合、デフォルト設定で新規作成。
設定内容には、DropboxやLINE APIの認証情報、監視フォルダ、Excelファイルのパスなどが含まれる。

アクセストークンの管理:
前回取得したDropboxアクセストークンが有効期限切れの場合、新しいトークンを認証コードから取得。
トークンの発行時刻や有効期限をYYYY/MM/DD HH:mm形式でログ表示。
有効期限が切れる20秒前に認証コードの入力を求め、認証が完了するまでPDFは未処理.txtに記録、1時間置きのDropboxファイルの削除もエラーが出ないように記録し保留する。エラーだろうと、メッセージが出そうなものは全て保留し記録
認証後、未送信ファイルの再送信、ファイル削除を試みる。
未処理.txtには未送信と未削除と再実行の時に分かるように分けて記録し確実にそれぞれを実行

Dropboxクライアントの初期化:
有効なアクセストークンを使用してクライアントを初期化。

未送信ファイルの処理:
起動時に未処理.txtを確認し、未処理のファイルを再送信。
LINE通知が成功した時点で該当ファイルを未処理.txtから削除。

2. PDF検出と文字列正規化
監視フォルダの監視:
設定された複数の監視フォルダを継続的に監視。
新規に作成されたPDFファイルを検出し、処理を開始。
監視状況をログで表示。

ファイル名の正規化:
PDFファイル名からFAX番号を抽出。
右から22文字の日付部分と拡張子を削除。
例: 093-201 1609-20241114102757469.pdf → 093-201-1609
先頭の文字が数字以外の場合、全体を送信者名とする。
例: ｼｭｳﾎｳﾁｮｳｺｸｺｳｷﾞｮｳ-20241202105609812.pdf → ｼｭｳﾎｳﾁｮｳｺｸｺｳｷﾞｮｳ
先頭の文字が数字の場合、ハイフンやスペースを削除。
例: 093-201 1609 → 0932011609

送信者名の取得:
正規化された文字列が全て数字の場合、ExcelのB列を検索。
一致する番号があればA列から送信者名を取得。
一致しない場合、正規化された文字列をそのまま送信者名として使用。
処理結果をログに記録。
3. DropboxアップロードとLINE通知

Dropboxアップロード:
新規PDFファイルを指定フォルダにアップロード。
アップロード後、共有リンクを生成。

LINE通知:
新しいFAXが届きました: と共有リンク、送信者名をLINEに通知。
アップロードや通知失敗時、エラー情報は未処理.txtに記録し、再処理を試みる。
Dropbox関連エラーはLINE通知に出力しない。

4. 削除
古いファイルの削除:
1時間おきにDropbox内のファイルを確認。
起動後からカウント、通知があればそこから1時間をカウントしなおし
更新日時が7日以上経過したファイルを削除。
現在時刻をタイムゾーンを考慮して比較し、エラー（例: can't compare offset-naive and offset-aware datetimes）を回避。

エラー処理:
削除処理中にエラーが発生した場合、ログに記録。

5. 継続的な監視
監視対象フォルダ内で上記の処理を継続的に繰り返す。
プログラムは手動で停止されるまで（Ctrl+C）実行。