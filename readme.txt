【FAXtoLINE概要】
FAX受信→PDF化→OneDriveアップロード→LINE通知を自動化する個人向けツールです。
PCが起動しPythonコードが実行している間LINE通知します

【重要】
※DropboxのAPI取得する必要はない
Onedrive版は一度動作させ始めたら最大360日までAPIが持続するのでお勧めする
現環境では起動ごとにキー認証が必要なのが煩わしいがブラウザ認証なのでアカウント保存されない
まだPython版なのでアプリ化するのは時間の問題、安定動作確認中

【onedrive版取扱説明書】
# FAXtoLINE.py 取扱説明書（個人用OneDrive対応版）

---

## 1. 必要なもの

- Windows PC
- Python 3.8 以上（推奨は最新版）
- Microsoft 個人アカウント（@outlook.com など）
- LINE公式アカウント（Messaging API用トークン取得のため）
- GitHubからダウンロードした本プログラム一式

---

## 2. Pythonのインストール

1. [公式サイト](https://www.python.org/downloads/)からPythonをダウンロードし、インストールします。
2. インストール時に「Add Python to PATH」にチェックを入れてください。

---

## 3. 必要なPythonパッケージのインストール

コマンドプロンプトまたはPowerShellで、プログラムのフォルダに移動し、以下を実行してください。

```powershell
pip install cryptography requests pandas openpyxl watchdog msal
```

---

## 4. Microsoft Azureアプリ（OneDrive API用）の登録

1. [Azureアプリ登録ページ](https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade)にアクセス
2. 「新規登録」をクリック
3. アプリ名を入力（例：FAXtoLINE）
4. **サポートされているアカウントの種類**：「個人のMicrosoftアカウントのみ」を選択
5. 「リダイレクトURI」は「モバイルとデスクトップのアプリ」で `http://localhost` を追加
6. 登録後、「アプリケーション（クライアント）ID」を控えておく

---

## 5. LINE公式アカウントのMessaging APIトークン取得

1. [LINE Developers](https://developers.line.biz/ja/)にアクセスし、プロバイダーを作成
2. チャネルを作成（Messaging API）
3. チャネルアクセストークンを発行し、控えておく

---

## 6. プログラムの初回起動と設定

1. プログラム（FAXtoLINE.py）をダブルクリック、またはコマンドで実行

    ```powershell
    python FAXtoLINE.py
    ```

2. 初回起動時に設定画面が表示されます。以下を入力してください。
    - 監視するフォルダのパス（PDFが保存されるフォルダ）
    - FAX番号と名前の対応表Excelファイル（任意、なければ空欄）
    - OneDriveアプリのClient ID（Azureで控えた値）
    - OneDriveのアップロード先フォルダ名（例：FAXtoLINE）
    - LINEチャネルアクセストークン

それぞれ取得方法は「OneDriveAPI取得説明」フォルダをご覧ください

3. 保存後、OneDrive認証画面が表示されます。  
   指示に従い、ブラウザで認証を完了してください。

---

## 7. 動作概要

- 指定フォルダに新しいPDFが作成されると自動で検知します。
- PDFをOneDriveの指定フォルダにアップロードし、共有リンクを作成します。
- FAX番号から名前をExcelで検索し、LINEに通知します（Excel未設定時はファイル名通知）。
- アップロードや通知に失敗した場合は、次回起動時に再送処理を行います。

---

## 8. よくあるトラブルと対処

- **OneDrive認証エラー**  
  → Azureアプリ登録の「アカウントの種類」「リダイレクトURI」を再確認してください。
- **アップロード時のパスエラー**  
  → OneDriveフォルダ名の先頭にスラッシュ（/）を付けないでください。
- **LINE通知が届かない**  
  → チャネルアクセストークンやLINE公式アカウントの設定を再確認してください。

---

## 9. サポート

- エラー内容やご質問は、GitHubのIssueやダウンロードを進めてきたSNSアカウントまでご連絡ください

---

**この説明書は個人用OneDrive対応版です。組織アカウントでは動作しません。**




【dropbox版、動作概要】
※dropox無料版の概要説明である
APIの制限で4時間で更新しないといけないのでお勧めしない
コードの流れは以下の方がくわしいかも

1. 認証
設定ファイルの読み込みと初期化:
config.json を読み込み、監視フォルダ、トークン残時間を内容を表示。
設定ファイルが存在しない場合、デフォルト設定で新規作成。
設定内容には、DropboxやLINE APIの認証情報、監視フォルダ、Excelファイルのパスなどが含まれる。

アクセストークンの管理:
前回取得したDropboxアクセストークンが有効期限切れの場合、新しいトークンを認証コードから取得。
トークンの発行時刻や有効期限をYYYY/MM/DD HH:mm形式でログ表示。
有効期限が切れる20秒前に認証コードの入力を求め、認証が完了するまでPDFは未処理.txtに記録、1時間置きのDropboxファイルの削除もエラーが出ないように記録し保留する。エラーだろうと、メッセージが出そうなものは全て保留し記録
認証後、未送信ファイルの再送信、ファイル削除を試みる。
未処理.txtには未送信と未削除と再実行の時に分かるように分けて記録し確実にそれぞれを実行

Dropboxクライアントの初期化:
有効なアクセストークンを使用してクライアントを初期化。

未送信ファイルの処理:
起動時に未処理.txtを確認し、未処理のファイルを再送信。
LINE通知が成功した時点で該当ファイルを未処理.txtから削除。

2. PDF検出と文字列正規化
監視フォルダの監視:
設定された複数の監視フォルダを継続的に監視。
新規に作成されたPDFファイルを検出し、処理を開始。
監視状況をログで表示。

ファイル名の正規化:
PDFファイル名からFAX番号を抽出。
右から22文字の日付部分と拡張子を削除。
例: 093-201 1609-20241114102757469.pdf → 093-201-1609
先頭の文字が数字以外の場合、全体を送信者名とする。
例: ｼｭｳﾎｳﾁｮｳｺｸｺｳｷﾞｮｳ-20241202105609812.pdf → ｼｭｳﾎｳﾁｮｳｺｸｺｳｷﾞｮｳ
先頭の文字が数字の場合、ハイフンやスペースを削除。
例: 093-201 1609 → 0932011609

送信者名の取得:
正規化された文字列が全て数字の場合、ExcelのB列を検索。
一致する番号があればA列から送信者名を取得。
一致しない場合、正規化された文字列をそのまま送信者名として使用。
処理結果をログに記録。
3. DropboxアップロードとLINE通知

Dropboxアップロード:
新規PDFファイルを指定フォルダにアップロード。
アップロード後、共有リンクを生成。

LINE通知:
新しいFAXが届きました: と共有リンク、送信者名をLINEに通知。
アップロードや通知失敗時、エラー情報は未処理.txtに記録し、再処理を試みる。
Dropbox関連エラーはLINE通知に出力しない。

4. 削除
古いファイルの削除:
1時間おきにDropbox内のファイルを確認。
起動後からカウント、通知があればそこから1時間をカウントしなおし
更新日時が7日以上経過したファイルを削除。
現在時刻をタイムゾーンを考慮して比較し、エラー（例: can't compare offset-naive and offset-aware datetimes）を回避。

エラー処理:
削除処理中にエラーが発生した場合、ログに記録。

5. 継続的な監視
監視対象フォルダ内で上記の処理を継続的に繰り返す。
プログラムは手動で停止されるまで（Ctrl+C）実行。
